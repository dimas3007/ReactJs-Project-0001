{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\React Js\\\\react-hello-world\\\\src\\\\container\\\\pages\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./BlogPost.css\";\nimport Post from \"../../../component/Post/Post\";\nimport axios from \"axios\";\nimport API from \"../../../service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        userId: 1,\n        id: 1,\n        title: \"\",\n        body: \"\"\n      },\n      isUpdate: false,\n      comments: []\n    };\n\n    this.getPostAPI = () => {\n      API.getNewsBlog().then(response => {\n        this.setState({\n          post: response\n        });\n      });\n      API.getComments().then(response => {\n        this.setState({\n          comments: response\n        });\n      });\n    };\n\n    this.postDataToAPI = () => {\n      API.postNewBlog(this.state.formBlogPost).then(response => {\n        this.getPostAPI();\n        this.setState({\n          formBlogPost: {\n            userId: 1,\n            id: 1,\n            title: \"\",\n            body: \"\"\n          }\n        });\n      });\n    };\n\n    this.putDataToAPI = () => {\n      API.updateNewsBlog(this.state.formBlogPost, this.state.formBlogPost.id).then(response => {\n        this.getPostAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            userId: 1,\n            id: 1,\n            title: \"\",\n            body: \"\"\n          }\n        });\n      });\n    };\n\n    this.handleRemove = data => {\n      API.deleteNewsBlog(data).then(response => {\n        this.getPostAPI();\n      }, err => {});\n    };\n\n    this.handleUpdate = data => {\n      this.setState({\n        formBlogPost: data,\n        isUpdate: true\n      });\n    };\n\n    this.handleFormChange = event => {\n      let formBlogPostNew = { ...this.state.formBlogPost\n      };\n      let timestamp = new Date().getTime();\n\n      if (!this.state.isUpdate) {\n        formBlogPostNew[\"id\"] = timestamp;\n      }\n\n      formBlogPostNew[event.target.name] = event.target.value;\n      this.setState({\n        formBlogPost: formBlogPostNew\n      }, () => {// Jika Mau liat perubahan dari setelah diinput, liatnya lewat cllback disini\n        // console.log(this.state.formBlogPost)\n      });\n    };\n\n    this.handelSubmit = () => {\n      if (this.state.isUpdate) {\n        this.putDataToAPI();\n      } else {\n        this.postDataToAPI();\n      }\n    };\n\n    this.handleDetail = id => {\n      this.props.history.push(`/detail-posts/${id}`);\n    };\n  }\n\n  componentDidMount() {\n    // Pemanggilan API menggunakan Fetch default by ES6\n    // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    //     .then(response => response.json())\n    //     .then(json => {\n    //         this.setState({\n    //             post: json\n    //         })\n    //     });\n    this.getPostAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Blog Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.formBlogPost.title,\n          name: \"title\",\n          placeholder: \"add title\",\n          onChange: this.handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Blog Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"body\",\n          id: \"body\",\n          value: this.state.formBlogPost.body,\n          cols: \"30\",\n          rows: \"10\",\n          placeholder: \"add blog Content\",\n          onChange: this.handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          onClick: this.handelSubmit,\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), this.state.post.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          data: post,\n          remove: this.handleRemove,\n          update: this.handleUpdate,\n          goDetail: this.handleDetail\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/Project/Web/React Js/react-hello-world/src/container/pages/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","axios","API","BlogPost","state","post","formBlogPost","userId","id","title","body","isUpdate","comments","getPostAPI","getNewsBlog","then","response","setState","getComments","postDataToAPI","postNewBlog","putDataToAPI","updateNewsBlog","handleRemove","data","deleteNewsBlog","err","handleUpdate","handleFormChange","event","formBlogPostNew","timestamp","Date","getTime","target","name","value","handelSubmit","handleDetail","props","history","push","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport \"./BlogPost.css\";\r\nimport Post from \"../../../component/Post/Post\";\r\nimport axios from \"axios\";\r\nimport API from \"../../../service\";\r\n\r\nclass BlogPost extends Component{\r\n    state = {\r\n        post: [],\r\n        formBlogPost: {\r\n            userId: 1,\r\n            id: 1,\r\n            title: \"\",\r\n            body: \"\",\r\n        },\r\n        isUpdate: false,\r\n        comments: [],\r\n    }\r\n\r\n    // Mengambil data dari API\r\n    getPostAPI = () => {\r\n        API.getNewsBlog().then(response => {\r\n            this.setState({\r\n                post: response\r\n            })\r\n        })\r\n        API.getComments().then(response => {\r\n            this.setState({\r\n                comments: response\r\n            })\r\n        })\r\n    }\r\n\r\n    // Method untuk menyimpan data baru oleh API\r\n    postDataToAPI = () => {\r\n        API.postNewBlog(this.state.formBlogPost).then(response => {\r\n            this.getPostAPI();\r\n            this.setState({\r\n                formBlogPost: {\r\n                    userId: 1,\r\n                    id: 1,\r\n                    title: \"\",\r\n                    body: \"\",\r\n                },\r\n            })\r\n        })\r\n    }\r\n\r\n    // Method untuk Mengupdate data melalui API\r\n    putDataToAPI = () => {\r\n        API.updateNewsBlog(this.state.formBlogPost, this.state.formBlogPost.id)\r\n            .then(response => {\r\n                this.getPostAPI();\r\n                this.setState({\r\n                    isUpdate: false,\r\n                    formBlogPost: {\r\n                        userId: 1,\r\n                        id: 1,\r\n                        title: \"\",\r\n                        body: \"\",\r\n                    },\r\n                })\r\n            })\r\n    }\r\n\r\n    // Method untuk Menghapus data melalui API\r\n    handleRemove = (data) => {\r\n        API.deleteNewsBlog(data).then(response => {\r\n            this.getPostAPI();\r\n        }, (err) => {\r\n            \r\n        })\r\n    }\r\n\r\n    // Method untuk menmpilkan data sebelumnya pada form\r\n    handleUpdate = (data) => {\r\n        this.setState({\r\n            formBlogPost: data,\r\n            isUpdate: true,\r\n        })\r\n    }\r\n\r\n    // Mendapatkan Data dari Form\r\n    handleFormChange = (event) => {\r\n        let formBlogPostNew = {...this.state.formBlogPost};\r\n        let timestamp = new Date().getTime();\r\n\r\n        if (!this.state.isUpdate){\r\n            formBlogPostNew[\"id\"] = timestamp;\r\n        }\r\n\r\n        formBlogPostNew[event.target.name] = event.target.value;\r\n\r\n        this.setState({\r\n            formBlogPost: formBlogPostNew\r\n        }, () => {\r\n            // Jika Mau liat perubahan dari setelah diinput, liatnya lewat cllback disini\r\n            // console.log(this.state.formBlogPost)\r\n        })\r\n    }\r\n\r\n    handelSubmit = () => {\r\n        if (this.state.isUpdate){\r\n            this.putDataToAPI()\r\n        } else {\r\n            this.postDataToAPI();\r\n        }\r\n    }\r\n\r\n    handleDetail = (id) => {\r\n        this.props.history.push(`/detail-posts/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Pemanggilan API menggunakan Fetch default by ES6\r\n        // fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        //     .then(response => response.json())\r\n        //     .then(json => {\r\n        //         this.setState({\r\n        //             post: json\r\n        //         })\r\n        //     });\r\n\r\n        this.getPostAPI();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <p className=\"section-title\">Blog Post</p>\r\n                <hr/>\r\n                <div className=\"form-add-post\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" value={this.state.formBlogPost.title} name={\"title\"} placeholder={\"add title\"} onChange={this.handleFormChange}/>\r\n                    <label htmlFor=\"body\">Blog Content</label>\r\n                    <textarea name=\"body\" id=\"body\" value={this.state.formBlogPost.body} cols=\"30\" rows=\"10\" placeholder={\"add blog Content\"} onChange={this.handleFormChange}></textarea>\r\n                    <button className={\"btn-submit\"} onClick={this.handelSubmit}>Simpan</button>\r\n                </div>\r\n                {/*{*/}\r\n                {/*    this.state.comments.map(comment => {*/}\r\n                {/*        return <p>{comment.name} - {comment.email}</p>*/}\r\n                {/*    })*/}\r\n                {/*}*/}\r\n                {\r\n                    this.state.post.map(post => {\r\n                        return <Post\r\n                            key={post.id}\r\n                            data={post}\r\n                            remove={this.handleRemove}\r\n                            update={this.handleUpdate}\r\n                            goDetail={this.handleDetail}\r\n                        />\r\n                    })\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogPost;\r\n"]},"metadata":{},"sourceType":"module"}