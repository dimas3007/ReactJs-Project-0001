{"ast":null,"code":"import axios from \"axios\";\n\nconst Post = (path, root, data) => {\n  const promise = new Promise((resolve, reject) => {\n    axios.post(`${root ? OnlineRoot : RootPath}/${path}`, data).then(response => {\n      resolve(response);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n}; // POST\n\n\n_c = Post;\n\nconst postNewBlog = data => Post(\"posts\", false, data); // GET\n\n\nconst getNewsBlog = () => Get(\"posts?_sort=id&_order=desc\", false);\n\nconst getComments = () => Get(\"comments\", true);\n\nconst API = {\n  postNewBlog,\n  getNewsBlog,\n  getComments\n};\nexport default API;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/Project/Web/React Js/react-hello-world/src/service/index.js"],"names":["axios","Post","path","root","data","promise","Promise","resolve","reject","post","OnlineRoot","RootPath","then","response","err","postNewBlog","getNewsBlog","Get","getComments","API"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AAC/B,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CR,IAAAA,KAAK,CAACS,IAAN,CAAY,GAAEN,IAAI,GAAGO,UAAH,GAAgBC,QAAS,IAAGT,IAAK,EAAnD,EAAsDE,IAAtD,EACKQ,IADL,CACWC,QAAD,IAAc;AAChBN,MAAAA,OAAO,CAACM,QAAD,CAAP;AACH,KAHL,EAGQC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALL;AAMH,GAPe,CAAhB;AASA,SAAOT,OAAP;AACH,CAXD,C,CAaA;;;KAbMJ,I;;AAcN,MAAMc,WAAW,GAAIX,IAAD,IAAUH,IAAI,CAAC,OAAD,EAAU,KAAV,EAAiBG,IAAjB,CAAlC,C,CAEA;;;AACA,MAAMY,WAAW,GAAG,MAAMC,GAAG,CAAC,4BAAD,EAA+B,KAA/B,CAA7B;;AACA,MAAMC,WAAW,GAAG,MAAMD,GAAG,CAAC,UAAD,EAAa,IAAb,CAA7B;;AAEA,MAAME,GAAG,GAAG;AACRJ,EAAAA,WADQ;AAERC,EAAAA,WAFQ;AAGRE,EAAAA;AAHQ,CAAZ;AAMA,eAAeC,GAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst Post = (path, root, data) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${root ? OnlineRoot : RootPath}/${path}`, data)\r\n            .then((response) => {\r\n                resolve(response);\r\n            }, (err) => {\r\n                reject(err);\r\n            })\r\n    })\r\n\r\n    return promise;\r\n}\r\n\r\n// POST\r\nconst postNewBlog = (data) => Post(\"posts\", false, data);\r\n\r\n// GET\r\nconst getNewsBlog = () => Get(\"posts?_sort=id&_order=desc\", false)\r\nconst getComments = () => Get(\"comments\", true)\r\n\r\nconst API = {\r\n    postNewBlog,\r\n    getNewsBlog,\r\n    getComments,\r\n}\r\n\r\nexport default API;\r\n\r\n"]},"metadata":{},"sourceType":"module"}