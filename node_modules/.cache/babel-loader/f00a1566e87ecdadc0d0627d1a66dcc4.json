{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\React Js\\\\react-hello-world\\\\src\\\\container\\\\LifeCycleComp\\\\LifeCycleComp.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LifeCycleComp extends Component {\n  constructor(props) {\n    // LifeCycle Sering di Pakai\n    super(props); // Karena nge Extends Component jadi harus pakai super\n\n    this.ChangeCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 1\n    };\n    console.log(\"constructor\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps\");\n    return null;\n  }\n\n  componentDidMount() {\n    // LifeCycle Sering di Pakai\n    console.log(\"componentDidMount\"); // setTimeout(() => {\n    //     this.setState({\n    //         count: 2\n    //     })\n    // }, 5000)\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // Haruskah Component Di upadate, bisa melakukan kondisi disini jika diperlukan\n    console.group(\"shouldComponentUpdate\");\n    console.log(\"nextProps: \", nextProps); // Jika ada Props diupdate\n\n    console.log(\"nextState: \", nextState); // Jika ada State diupdate\n\n    console.log(\"this state: \", this.state);\n    console.log(\"nextContext: \", nextContext); // Jika ada Context diupdate\n\n    console.groupEnd();\n\n    if (nextState.count >= 4) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"getSnapshotBeforeUpdate\");\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // LifeCycle Sering di Pakai\n    console.log(\"componentDidUpdate\");\n  }\n\n  componentWillUnmount() {\n    // LifeCycle Sering di Pakai\n    console.log(\"componentWillUnmount\");\n  }\n\n  render() {\n    // LifeCycle Sering di Pakai\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: this.ChangeCount,\n      children: [\"Component Button \", this.state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LifeCycleComp;","map":{"version":3,"sources":["D:/Project/Web/React Js/react-hello-world/src/container/LifeCycleComp/LifeCycleComp.jsx"],"names":["React","Component","LifeCycleComp","constructor","props","ChangeCount","setState","count","state","console","log","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextProps","nextState","nextContext","group","groupEnd","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AACjCE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAE;AAClB,UAAMA,KAAN,EADgB,CACF;;AADE,SAgDpBC,WAhDoB,GAgDN,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADhB,OAAd;AAGH,KApDmB;;AAEhB,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAE8B,SAAxBC,wBAAwB,CAACP,KAAD,EAAQI,KAAR,EAAc;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAAE;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACH;;AAEDG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC;AAAE;AACvDP,IAAAA,OAAO,CAACQ,KAAR,CAAc,uBAAd;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,SAA3B,EAFqD,CAEd;;AACvCL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,SAA3B,EAHqD,CAGd;;AACvCN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKF,KAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,WAA7B,EALqD,CAKV;;AAC3CP,IAAAA,OAAO,CAACS,QAAR;;AACA,QAAIH,SAAS,CAACR,KAAV,IAAmB,CAAvB,EAAyB;AACrB,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDY,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CZ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAO,IAAP;AACH;;AAEDY,EAAAA,kBAAkB,CAACF,SAAD,EAAYC,SAAZ,EAAuBE,QAAvB,EAAiC;AAAE;AACjDd,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAEDc,EAAAA,oBAAoB,GAAG;AAAE;AACrBf,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAQDe,EAAAA,MAAM,GAAE;AAAE;AACNhB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBACI;AAAQ,MAAA,SAAS,EAAE,KAAnB;AAA0B,MAAA,OAAO,EAAE,KAAKL,WAAxC;AAAA,sCAAuE,KAAKG,KAAL,CAAWD,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA5DgC;;AA+DrC,eAAeL,aAAf","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nclass LifeCycleComp extends Component{\r\n    constructor (props) { // LifeCycle Sering di Pakai\r\n        super(props); // Karena nge Extends Component jadi harus pakai super\r\n        this.state = {\r\n            count: 1\r\n        }\r\n        console.log(\"constructor\");\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        console.log(\"getDerivedStateFromProps\");\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() { // LifeCycle Sering di Pakai\r\n        console.log(\"componentDidMount\");\r\n        // setTimeout(() => {\r\n        //     this.setState({\r\n        //         count: 2\r\n        //     })\r\n        // }, 5000)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) { // Haruskah Component Di upadate, bisa melakukan kondisi disini jika diperlukan\r\n        console.group(\"shouldComponentUpdate\");\r\n        console.log(\"nextProps: \", nextProps); // Jika ada Props diupdate\r\n        console.log(\"nextState: \", nextState); // Jika ada State diupdate\r\n        console.log(\"this state: \", this.state)\r\n        console.log(\"nextContext: \", nextContext); // Jika ada Context diupdate\r\n        console.groupEnd();\r\n        if (nextState.count >= 4){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate\");\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { // LifeCycle Sering di Pakai\r\n        console.log(\"componentDidUpdate\");\r\n    }\r\n\r\n    componentWillUnmount() { // LifeCycle Sering di Pakai\r\n        console.log(\"componentWillUnmount\");\r\n    }\r\n\r\n    ChangeCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    render(){ // LifeCycle Sering di Pakai\r\n        console.log(\"render\");\r\n        return(\r\n            <button className={\"btn\"} onClick={this.ChangeCount}>Component Button {this.state.count}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifeCycleComp;\r\n"]},"metadata":{},"sourceType":"module"}